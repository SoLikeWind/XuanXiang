# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/blog/article:
        get:
            tags:
                - Blog
            operationId: Blog_ListArticle
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: tag
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.ListArticleReply'
        post:
            tags:
                - Blog
            operationId: Blog_CreateArticle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/blog.v1.CreateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.CreateArticleReply'
    /v1/blog/article/{id}:
        get:
            tags:
                - Blog
            operationId: Blog_GetArticle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.GetArticleReply'
        put:
            tags:
                - Blog
            operationId: Blog_UpdateArticle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/blog.v1.UpdateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - Blog
            operationId: Blog_DeleteArticle
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/blog/tag:
        get:
            tags:
                - Blog
            operationId: Blog_ListTag
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.ListTagReply'
        post:
            tags:
                - Blog
            operationId: Blog_CreateTag
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/blog.v1.CreateTagRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.CreateTagReply'
    /v1/blog/tag/{id}:
        get:
            tags:
                - Blog
            operationId: Blog_GetTag
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/blog.v1.GetTagReply'
        put:
            tags:
                - Blog
            operationId: Blog_UpdateTag
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/blog.v1.UpdateTagRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - Blog
            operationId: Blog_DeleteTag
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
components:
    schemas:
        blog.v1.CreateArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/common.model.Article'
        blog.v1.CreateArticleRequest:
            type: object
            properties:
                title:
                    type: string
                summary:
                    type: string
                image:
                    type: string
                contentMd:
                    type: string
        blog.v1.CreateTagReply:
            type: object
            properties:
                tag:
                    $ref: '#/components/schemas/common.model.Tag'
        blog.v1.CreateTagRequest:
            type: object
            properties:
                name:
                    type: string
        blog.v1.GetArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/common.model.Article'
        blog.v1.GetTagReply:
            type: object
            properties:
                tag:
                    $ref: '#/components/schemas/common.model.Tag'
        blog.v1.ListArticleReply:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/common.model.Article'
        blog.v1.ListTagReply:
            type: object
            properties:
                total:
                    type: string
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/common.model.Tag'
        blog.v1.UpdateArticleRequest:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                summary:
                    type: string
                image:
                    type: string
                contentMd:
                    type: string
        blog.v1.UpdateTagRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        common.model.Article:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                summary:
                    type: string
                image:
                    type: string
                contentMd:
                    type: string
                contentHtml:
                    type: string
                views:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        common.model.Tag:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Blog
    - name: Greeter
      description: The greeting service definition.
