// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticlesColumns holds the columns for the "articles" table.
	ArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "summary", Type: field.TypeString, Size: 255},
		{Name: "image", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "content_md", Type: field.TypeString, Size: 100000},
		{Name: "content_html", Type: field.TypeString, Size: 100000},
		{Name: "views", Type: field.TypeInt64, Default: 0},
	}
	// ArticlesTable holds the schema information for the "articles" table.
	ArticlesTable = &schema.Table{
		Name:       "articles",
		Columns:    ArticlesColumns,
		PrimaryKey: []*schema.Column{ArticlesColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// ArticleTagsColumns holds the columns for the "article_tags" table.
	ArticleTagsColumns = []*schema.Column{
		{Name: "article_id", Type: field.TypeInt64},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// ArticleTagsTable holds the schema information for the "article_tags" table.
	ArticleTagsTable = &schema.Table{
		Name:       "article_tags",
		Columns:    ArticleTagsColumns,
		PrimaryKey: []*schema.Column{ArticleTagsColumns[0], ArticleTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_tags_article_id",
				Columns:    []*schema.Column{ArticleTagsColumns[0]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "article_tags_tag_id",
				Columns:    []*schema.Column{ArticleTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticlesTable,
		TagsTable,
		ArticleTagsTable,
	}
)

func init() {
	ArticleTagsTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleTagsTable.ForeignKeys[1].RefTable = TagsTable
}
